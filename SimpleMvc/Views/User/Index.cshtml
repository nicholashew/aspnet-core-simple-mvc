@model PaginatedList<ApplicationUser>

@{
    ViewData["Title"] = "Index";
}

<h2 class="page-header">User Management</h2>

<form class="form-horizontal" asp-action="Index" method="get">
    @await Html.PartialAsync("_AlertMessages")
    <div class="form-group">
        <label class="col-sm-2 control-label">Name</label>
        <div class="col-sm-10">
            <input type="text" name="SearchName" value="@ViewData["CurrentFilterName"]" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">Email</label>
        <div class="col-sm-10">
            <input type="text" name="SearchEmail" value="@ViewData["CurrentFilterEmail"]" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">&nbsp;</label>
        <div class="col-sm-10">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
</form>
<hr />
<div class="row">
    <div class="col-sm-12">
        <a class="btn btn-primary pull-right" asp-action="Create">Create New</a>
    </div>
    <div class="col-sm-12">
        <div class="table-responsive">
            <table class="table table-striped table-responsive">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Email Confirmed</th>
                        <th>Access Failed Count</th>
                        <th>Deleted</th>
                        <th>Last Modified</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.Raw(item.EmailConfirmed ? "Yes" : "No")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AccessFailedCount)
                            </td>
                            <td>
                                @Html.Raw(item.IsDeleted ? "<span class=\"text-danger bg-danger\">Deleted</span>" : "")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastModifiedDate)
                            </td>
                            <td>
                                <a class="btn btn-default" data-toggle="Edit Account" title="Edit Account" asp-action="Edit" asp-route-id="@item.Id">
                                    <span class="glyphicon glyphicon-pencil"></span>
                                </a>
                                @{
                                    if (!item.IsDeleted)
                                    {
                                        <a class="btn btn-warning" data-toggle="Delete Account" title="Delete Account" asp-action="Delete" asp-route-id="@item.Id">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-danger" data-toggle="Permanent Delete Account" title="Permanent Delete Account" asp-action="HardDelete" asp-route-id="@item.Id"
                                           onclick="return confirm('Are you sure you want to permanent delete this user?');">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </a>
                                        <a class="btn btn-info" data-toggle="Restore Account" title="Restore Account" asp-action="Restore" asp-route-id="@item.Id"
                                           onclick="return confirm('Are you sure you want to restore this user?');">
                                            <span class="glyphicon glyphicon-retweet"></span>
                                        </a>
                                    }
                                }
                            </td>
                        </tr>
                     }
                </tbody>
            </table>

            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex - 1)"
               asp-route-searchName="@ViewData["CurrentFilterName"]"
               asp-route-searchEmail="@ViewData["CurrentFilterEmail"]"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-page="@(Model.PageIndex + 1)"
               asp-route-searchName="@ViewData["CurrentFilterName"]"
               asp-route-searchEmail="@ViewData["CurrentFilterEmail"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </div>
    </div>
</div>