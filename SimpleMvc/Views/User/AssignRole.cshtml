@using SimpleMvc.Models.UserViewModels

@model AssignedRoleViewModel

@{
    ViewData["Title"] = "Assign User Roles";
}

<h2 class="page-header">@ViewData["Title"]</h2>

<form class="form-horizontal" asp-action="AssignRole" method="post">
    @await Html.PartialAsync("_AlertMessages")
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="UserName" class="control-label col-md-2"></label>
        <div class="col-md-10">
            <input asp-for="UserName" class="form-control" disabled />
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Roles</label>
        <div class="col-md-10">
            @{
                List<AssignedRoleData> roles = ViewBag.Roles;
                foreach (var role in roles)
                {
                <div class="checkbox">
                    <label><input type="checkbox" name="selectedRoles" value="@role.RoleId" @(Html.Raw(role.Assigned ? "checked=\"checked\"" : "")) @(Html.Raw(role.CanToggle ? "" : "disabled"))/>@role.RoleName</label>
                </div>
                }
            }
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10 col-md-offset-2">
            <input type="submit" value="Save" class="btn btn-primary" />
            <a class="btn btn-default" asp-action="Edit" asp-route-id="@Model.Id">Back</a>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
